Index: app/src/main/java/com/example/tecmovil/ActividadReciclaje.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.tecmovil;\r\nimport android.Manifest;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Bitmap;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.RadioButton;\r\nimport android.widget.RadioGroup;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\n\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\n\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\nimport java.util.UUID;\r\n\r\npublic class ActividadReciclaje extends AppCompatActivity {\r\n\r\n    private static final int REQUEST_CAMERA_PERMISSION = 201;\r\n    private static final int REQUEST_IMAGE_CAPTURE = 202;\r\n    private Button btnTakePhoto, btnIncrease, btnDecrease, btnSend;\r\n    private TextView textViewKilosAmount;\r\n    private RadioGroup radioGroupPoints, radioGroupMaterials;\r\n    private int kilos = 0;\r\n\r\n    private FirebaseAuth auth = FirebaseAuth.getInstance();\r\n    private FirebaseUser currentUser = auth.getCurrentUser();\r\n    private DatabaseReference usersRef = FirebaseDatabase.getInstance().getReference(\"usuarios\");\r\n    private StorageReference storageRef = FirebaseStorage.getInstance().getReference().child(\"images\");\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_actividadreciclaje);\r\n\r\n        // Comprueba y solicita permisos\r\n        if (ContextCompat.checkSelfPermission(this, Manifest.permission.CAMERA) != PackageManager.PERMISSION_GRANTED ||\r\n                ContextCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\r\n            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.CAMERA, Manifest.permission.WRITE_EXTERNAL_STORAGE}, REQUEST_CAMERA_PERMISSION);\r\n        }\r\n\r\n        // Inicialización de los componentes de la UI\r\n        btnTakePhoto = findViewById(R.id.btnTakePhoto);\r\n        btnIncrease = findViewById(R.id.btnIncrease);\r\n        btnDecrease = findViewById(R.id.btnDecrease);\r\n        btnSend = findViewById(R.id.btnSend);\r\n        textViewKilosAmount = findViewById(R.id.textViewKilosAmount);\r\n        radioGroupPoints = findViewById(R.id.radioGroupPoints);\r\n        radioGroupMaterials = findViewById(R.id.radioGroupMaterials);\r\n\r\n        btnTakePhoto.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                openCamera();\r\n            }\r\n        });\r\n\r\n        btnIncrease.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                kilos++;\r\n                textViewKilosAmount.setText(String.valueOf(kilos));\r\n            }\r\n        });\r\n\r\n        btnDecrease.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (kilos > 0) {\r\n                    kilos--;\r\n                    textViewKilosAmount.setText(String.valueOf(kilos));\r\n                }\r\n            }\r\n        });\r\n\r\n        btnSend.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                validateAndSaveRecyclingData();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void openCamera() {\r\n        Intent takePictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n        if (takePictureIntent.resolveActivity(getPackageManager()) != null) {\r\n            startActivityForResult(takePictureIntent, REQUEST_IMAGE_CAPTURE);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == REQUEST_IMAGE_CAPTURE && resultCode == RESULT_OK) {\r\n            Bundle extras = data.getExtras();\r\n            Bitmap imageBitmap = (Bitmap) extras.get(\"data\");\r\n            uploadImageAndSaveData(imageBitmap);\r\n        }\r\n    }\r\n\r\n    private void validateAndSaveRecyclingData() {\r\n        if (radioGroupPoints.getCheckedRadioButtonId() == -1 || radioGroupMaterials.getCheckedRadioButtonId() == -1 || kilos == 0) {\r\n            Toast.makeText(ActividadReciclaje.this, \"Por favor, completa todos los campos.\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    private void uploadImageAndSaveData(Bitmap imageBitmap) {\r\n        // Subir la imagen al Storage de Firebase\r\n        ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n        imageBitmap.compress(Bitmap.CompressFormat.JPEG, 100, baos);\r\n        byte[] imageData = baos.toByteArray();\r\n\r\n        // Obtener el nombre del usuario actual\r\n        String userName = currentUser.getDisplayName();\r\n\r\n        // Crear un nombre único para la imagen\r\n        String imageName = \"image_\" + userName + \"_\" + UUID.randomUUID().toString() + \".jpg\";\r\n        StorageReference imageRef = storageRef.child(imageName);\r\n\r\n        // Subir la imagen al Storage\r\n        UploadTask uploadTask = imageRef.putBytes(imageData);\r\n        uploadTask.addOnSuccessListener(taskSnapshot -> {\r\n                    // Imagen subida con éxito, obtener su URL\r\n                    imageRef.getDownloadUrl().addOnSuccessListener(uri -> {\r\n                        String imageUrl = uri.toString();\r\n\r\n                        // Crear una entrada en la base de datos\r\n                        DatabaseReference userRef = usersRef.child(currentUser.getUid());\r\n                        String key = userRef.push().getKey();\r\n\r\n                        Map<String, Object> userData = new HashMap<>();\r\n                        userData.put(\"nombre\", currentUser.getDisplayName());\r\n                        userData.put(\"correo\", currentUser.getEmail());\r\n                        // NO GUARDAR LA CONTRASEÑA EN LA BASE DE DATOS EN TIEMPO REAL\r\n\r\n                        // Guardar los datos del usuario\r\n                        userRef.setValue(userData);\r\n\r\n                        Map<String, Object> reciclaje = new HashMap<>();\r\n                        reciclaje.put(\"uid\", key);\r\n                        reciclaje.put(\"nombreUsuario\", currentUser.getDisplayName());\r\n                        reciclaje.put(\"correoUsuario\", currentUser.getEmail());\r\n                        reciclaje.put(\"puntoDeEntrega\", ((RadioButton)findViewById(radioGroupPoints.getCheckedRadioButtonId())).getText().toString());\r\n                        reciclaje.put(\"material\", ((RadioButton)findViewById(radioGroupMaterials.getCheckedRadioButtonId())).getText().toString());\r\n                        reciclaje.put(\"kilos\", kilos);\r\n                        reciclaje.put(\"imageUrl\", imageUrl);\r\n\r\n                        // Guardar los datos del reciclaje bajo la UID del usuario\r\n                        userRef.child(\"reciclajes\").child(key).setValue(reciclaje)\r\n                                .addOnSuccessListener(aVoid -> {\r\n                                    Toast.makeText(ActividadReciclaje.this, \"Datos de reciclaje guardados correctamente\", Toast.LENGTH_SHORT).show();\r\n                                })\r\n                                .addOnFailureListener(e -> {\r\n                                    Toast.makeText(ActividadReciclaje.this, \"Error al guardar los datos de reciclaje: \" + e.getMessage(), Toast.LENGTH_SHORT).show();\r\n                                });\r\n                    });\r\n                })\r\n                .addOnFailureListener(e -> {\r\n                    // Error al subir la imagen\r\n                    Toast.makeText(ActividadReciclaje.this, \"Error al subir la imagen: \" + e.getMessage(), Toast.LENGTH_SHORT).show();\r\n                });\r\n    }\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\r\n        if (requestCode == REQUEST_CAMERA_PERMISSION) {\r\n            if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n                // Permisos concedidos, la cámara puede ser abierta\r\n            } else {\r\n                Toast.makeText(this, \"Permisos de cámara no concedidos\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/tecmovil/ActividadReciclaje.java b/app/src/main/java/com/example/tecmovil/ActividadReciclaje.java
--- a/app/src/main/java/com/example/tecmovil/ActividadReciclaje.java	(revision 9e3a2d8b8c902660197310db014b2702b647780e)
+++ b/app/src/main/java/com/example/tecmovil/ActividadReciclaje.java	(date 1716340312874)
@@ -183,9 +183,9 @@
         super.onRequestPermissionsResult(requestCode, permissions, grantResults);
         if (requestCode == REQUEST_CAMERA_PERMISSION) {
             if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
-                // Permisos concedidos, la cámara puede ser abierta
+                Toast.makeText(this, "Permisos de cámara SI concedidos", Toast.LENGTH_SHORT).show();
             } else {
-                Toast.makeText(this, "Permisos de cámara no concedidos", Toast.LENGTH_SHORT).show();
+                Toast.makeText(this, "Permisos de cámara NO concedidos", Toast.LENGTH_SHORT).show();
             }
         }
     }
